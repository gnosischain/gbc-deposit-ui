name: Automatic Deployment to Dev/Staging

on:
  # Launches for pushes to main or dev
  push:
    branches:
      - main
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NEXT_PUBLIC_WC_PROJECT_ID: ${{ secrets.DEV_WC_PROJECT_ID }}
  NEXT_PUBLIC_GRAPHQL_URL: ${{ secrets.PUBLIC_GRAPHQL_URL }}

jobs:
  deploy:
    name: Deployment
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.12.1

      - name: Install
        run: |
          rm -rf .cache
          rm -rf build
          yarn config set cache-folder .yarn
          yarn install
          pip install awscli --upgrade --user

      - name: Build App
        run: yarn build

      # - name: Install Playwright Browsers
      #   run: yarn playwright install

      # - name: Setup xvfb
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y xvfb

      # - name: Run tests
      #   run: xvfb-run --auto-servernum --server-args='-screen 0, 1920x1080x24' yarn run-e2e-tests

      - name: Configure AWS Development credentials
        uses: aws-actions/configure-aws-credentials@v1
        if: ( github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main' )
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.DEV_AWS_DEFAULT_REGION }}

      # Script to deploy to development environment
      - name: 'Deploy to S3: Development'
        if: github.ref == 'refs/heads/dev'
        run: |
          aws s3 sync build/ s3://${{ secrets.DEV_BUCKET_NAME }}/dev --exclude "*.html" --cache-control max-age=0,no-cache,no-store,public --delete
          aws s3 sync build/ s3://${{ secrets.DEV_BUCKET_NAME }}/dev --exclude "*" --include "*.html" --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html --delete
          aws s3 sync data s3://${{ secrets.DEV_BUCKET_NAME }}/dev/data --delete

      # Script to deploy to staging environment
      - name: 'Deploy to S3: Staging'
        if: github.ref == 'refs/heads/main'
        run: |
          aws s3 sync build/ s3://${{ secrets.DEV_BUCKET_NAME }}/main --exclude "*.html" --cache-control max-age=0,no-cache,no-store,public --delete
          aws s3 sync build/ s3://${{ secrets.DEV_BUCKET_NAME }}/main --exclude "*" --include "*.html" --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html --delete
          aws s3 sync data s3://${{ secrets.DEV_BUCKET_NAME }}/main/data --delete

      - name: 'Cloudfront: cache invalidation'
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.DEV_AWS_CLOUDFRONT_ID }} --paths "/*"